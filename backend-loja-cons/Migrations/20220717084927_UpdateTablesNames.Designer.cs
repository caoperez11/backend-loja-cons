// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backend_loja_cons;

#nullable disable

namespace backend_loja_cons.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220717084927_UpdateTablesNames")]
    partial class UpdateTablesNames
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backend_loja_cons.Entities.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Productoid")
                        .HasColumnType("integer");

                    b.Property<string>("c_descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("c_icono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("c_imagen_url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("c_nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("c_nombreCorto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_modificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("usuario_creacion")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Productoid");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Empresa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("em_correo_principal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("em_mision")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("em_telefono_principal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("em_vision")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_modificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("usuario_creacion")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Empresa+BannersEmpresa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Empresaid")
                        .HasColumnType("integer");

                    b.Property<string>("be_descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("be_imagen_url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("be_tipo_banner")
                        .HasColumnType("integer");

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_modificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("orden")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Empresaid");

                    b.ToTable("BannersEmpresa");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Empresa+ContactosEmpresa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Empresaid")
                        .HasColumnType("integer");

                    b.Property<string>("con_detalle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("con_numero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("con_tipo_contacto")
                        .HasColumnType("integer");

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_modificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("orden")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Empresaid");

                    b.ToTable("ContactosEmpresa");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Empresa+CorreosEmpresa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Empresaid")
                        .HasColumnType("integer");

                    b.Property<string>("ce_correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ce_tipo_correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ce_tipo_oficina")
                        .HasColumnType("integer");

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_modificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("orden")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Empresaid");

                    b.ToTable("CorreosEmpresa");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Empresa+DireccionesEmpresa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Empresaid")
                        .HasColumnType("integer");

                    b.Property<string>("de_barrio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("de_calle_principal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("de_calle_secundaria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("de_ciudad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("de_direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("de_latitud")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("de_longitud")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("de_pais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("de_tipo_oficina")
                        .HasColumnType("integer");

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_modificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("orden")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Empresaid");

                    b.ToTable("DireccionesEmpresa");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Empresa+LogosEmpresa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Empresaid")
                        .HasColumnType("integer");

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_modificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("le_nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lg_imagen_url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("lg_tipo_logo")
                        .HasColumnType("integer");

                    b.Property<int>("orden")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Empresaid");

                    b.ToTable("LogosEmpresa");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Empresa+ObjetivosEmpresa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Empresaid")
                        .HasColumnType("integer");

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_modificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("obe_nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("obe_titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("orden")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Empresaid");

                    b.ToTable("ObjetivosEmpresa");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Empresa+RedesSocialesEmpresa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Empresaid")
                        .HasColumnType("integer");

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_modificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("orden")
                        .HasColumnType("integer");

                    b.Property<string>("rse_icono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("rse_nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("rse_tipo_red_social")
                        .HasColumnType("integer");

                    b.Property<string>("rse_url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Empresaid");

                    b.ToTable("RedesSocialesEmpresa");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Empresa+ValoresEmpresa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Empresaid")
                        .HasColumnType("integer");

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_modificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("orden")
                        .HasColumnType("integer");

                    b.Property<string>("vae_nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vae_titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Empresaid");

                    b.ToTable("ValoresEmpresa");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Marca", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_modificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("m_descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("m_icono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("m_imagen_url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("m_nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("m_nombre_corto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("usuario_creacion")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_modificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("pr_codigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("pr_descuento")
                        .HasColumnType("numeric");

                    b.Property<string>("pr_imagen_url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("pr_marca_id")
                        .HasColumnType("integer");

                    b.Property<int>("pr_marcaid")
                        .HasColumnType("integer");

                    b.Property<string>("pr_modelo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("pr_nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("pr_nombre_corto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("pr_precio")
                        .HasColumnType("numeric");

                    b.Property<int>("pr_stock")
                        .HasColumnType("integer");

                    b.Property<int>("pr_valoracion")
                        .HasColumnType("integer");

                    b.Property<int>("usuario_creacion")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("pr_marcaid");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Producto+CaracteristicaProductos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Productoid")
                        .HasColumnType("integer");

                    b.Property<string>("cp_cracteristicas")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("cp_orden")
                        .HasColumnType("integer");

                    b.Property<string>("cp_titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Productoid");

                    b.ToTable("CaracteristicaProductos");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Producto+DetalleProductos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Productoid")
                        .HasColumnType("integer");

                    b.Property<string>("dp_cracteristicas")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("dp_orden")
                        .HasColumnType("integer");

                    b.Property<string>("dp_titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Productoid");

                    b.ToTable("DetalleProductos");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Categoria", b =>
                {
                    b.HasOne("backend_loja_cons.Entities.Producto", null)
                        .WithMany("pr_categorias")
                        .HasForeignKey("Productoid");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Empresa+BannersEmpresa", b =>
                {
                    b.HasOne("backend_loja_cons.Entities.Empresa", null)
                        .WithMany("em_imagenes")
                        .HasForeignKey("Empresaid");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Empresa+ContactosEmpresa", b =>
                {
                    b.HasOne("backend_loja_cons.Entities.Empresa", null)
                        .WithMany("em_telefonos")
                        .HasForeignKey("Empresaid");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Empresa+CorreosEmpresa", b =>
                {
                    b.HasOne("backend_loja_cons.Entities.Empresa", null)
                        .WithMany("em_correos")
                        .HasForeignKey("Empresaid");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Empresa+DireccionesEmpresa", b =>
                {
                    b.HasOne("backend_loja_cons.Entities.Empresa", null)
                        .WithMany("em_direcciones")
                        .HasForeignKey("Empresaid");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Empresa+LogosEmpresa", b =>
                {
                    b.HasOne("backend_loja_cons.Entities.Empresa", null)
                        .WithMany("em_logos")
                        .HasForeignKey("Empresaid");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Empresa+ObjetivosEmpresa", b =>
                {
                    b.HasOne("backend_loja_cons.Entities.Empresa", null)
                        .WithMany("em_objetivos")
                        .HasForeignKey("Empresaid");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Empresa+RedesSocialesEmpresa", b =>
                {
                    b.HasOne("backend_loja_cons.Entities.Empresa", null)
                        .WithMany("em_redes_sociales")
                        .HasForeignKey("Empresaid");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Empresa+ValoresEmpresa", b =>
                {
                    b.HasOne("backend_loja_cons.Entities.Empresa", null)
                        .WithMany("em_valores")
                        .HasForeignKey("Empresaid");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Producto", b =>
                {
                    b.HasOne("backend_loja_cons.Entities.Marca", "pr_marca")
                        .WithMany("m_productos")
                        .HasForeignKey("pr_marcaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pr_marca");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Producto+CaracteristicaProductos", b =>
                {
                    b.HasOne("backend_loja_cons.Entities.Producto", null)
                        .WithMany("pr_caracteristicas")
                        .HasForeignKey("Productoid");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Producto+DetalleProductos", b =>
                {
                    b.HasOne("backend_loja_cons.Entities.Producto", null)
                        .WithMany("pr_detalles")
                        .HasForeignKey("Productoid");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Empresa", b =>
                {
                    b.Navigation("em_correos");

                    b.Navigation("em_direcciones");

                    b.Navigation("em_imagenes");

                    b.Navigation("em_logos");

                    b.Navigation("em_objetivos");

                    b.Navigation("em_redes_sociales");

                    b.Navigation("em_telefonos");

                    b.Navigation("em_valores");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Marca", b =>
                {
                    b.Navigation("m_productos");
                });

            modelBuilder.Entity("backend_loja_cons.Entities.Producto", b =>
                {
                    b.Navigation("pr_caracteristicas");

                    b.Navigation("pr_categorias");

                    b.Navigation("pr_detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
